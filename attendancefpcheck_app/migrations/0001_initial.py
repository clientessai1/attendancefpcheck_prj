# Generated by Django 4.2.1 on 2023-06-16 17:50

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('raison_sociale', models.CharField(default=' ', max_length=100)),
                ('heure_normale_arrivee', models.TimeField(default=datetime.datetime(2023, 6, 16, 18, 50, 16, 556293))),
                ('heure_normale_depart', models.TimeField(default=datetime.datetime(2023, 6, 16, 18, 50, 16, 556293))),
                ('duree_horaire_normale', models.PositiveIntegerField(default=1, help_text='En heures')),
            ],
            options={
                'ordering': ['raison_sociale'],
            },
        ),
        migrations.CreateModel(
            name='Lecteur',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('designation', models.CharField(default=' ', max_length=100)),
                ('description', models.TextField(default=' ', max_length=250, null=True)),
                ('num_serie', models.CharField(default=' ', max_length=150, null=True)),
                ('type_lecteur', models.CharField(choices=[('Capacitif', 'Capacitif'), ('Optique', 'Optique'), ('Thermique', 'Thermique'), ('Ultrasonique', 'Ultrasonique')], max_length=15)),
            ],
            options={
                'ordering': ['designation'],
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_heure_entree', models.DateTimeField()),
                ('date_heure_sortie', models.DateTimeField()),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendancefpcheck_app.entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Empreinte',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_empreinte', models.CharField(choices=[('Annulaire Droit', 'Annulaire Droit'), ('Annulaire Gauche', 'Annulaire Gauche'), ('Auriculaire Droit', 'Auriculaire Droit'), ('Auriculaire Gauche', 'Auriculaire Gauche'), ('Index Droit', 'Index Droit'), ('Index Gauche', 'Index Gauche'), ('Majeur Droit', 'Majeur Droit'), ('Majeur Gauche', 'Majeur Gauche'), ('Pouce Droit', 'Pouce Droit'), ('Pouce Gauche', 'Pouce Gauche')], max_length=20)),
                ('minutie', models.CharField(default=' ', max_length=250)),
                ('chemin_image', models.ImageField(upload_to='photos')),
                ('lecteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendancefpcheck_app.lecteur')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['type_empreinte'],
            },
        ),
    ]
